module.exports = {
  name: 'punishments',
  regex: /punishments/,
  desc: '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞—Ä—É—à–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞',
  args: ['<@—É—á–∞—Å—Ç–Ω–∏–∫ | —Ç—ç–≥>'],
  example: 'punishments @—á–µ–ª#1234',
  module: 'mod',
  run: async (message, args) => {
    const matchArgs = new RegExp(args[0], 'i')
    let member = message.mentions.members.first() || message.guild.members.cache.find(m => m.user.tag.match(matchArgs));
    if (args[0] && !member) return Bot.err('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
    if (!args[0]) member = message.member;

    const dbMember = await Bot.getUser(member.id + message.guild.id);

    const punList = dbMember.punishments.map((p, i) => {
      let res = `${i + 1}. \`${Bot.toMoscowTime(new Date(p.date))}\` `;
      res += `**${p.type.slice(0, 1).toUpperCase() + p.type.slice(1)}**`;
      res += ` - ${p.reason}`;
      return res;
    })

    message.channel.send(punList.join('\n')).catch(() => message.channel.send('–≠—Ç–æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫ –µ—â–µ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—Ä—É—à–∏–ª üëº'));
  }
};